generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model company {
  id               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description      String?   @db.VarChar(255)
  established_date DateTime? @db.Timestamp(6)
  location         String?   @db.VarChar(255)
  contact_number   String?   @db.VarChar(255)
  name             String    @db.VarChar(255)
  created_at       DateTime  @default(now()) @db.Timestamp(6)
  updated_at       DateTime  @default(now()) @db.Timestamp(6)
  user_id          String    @db.Uuid
  tenant_id        String    @db.VarChar(255)
  user             user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model dashboard {
  id                String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  total_sales       Int?
  total_orders      Int?
  total_offers      Int?
  total_inventory   Int?
  total_customers   Int?
  business_owner_id String   @db.Uuid
  created_at        DateTime @default(now()) @db.Timestamp(6)
  updated_at        DateTime @default(now()) @db.Timestamp(6)
  user              user     @relation(fields: [business_owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model inventory {
  id             String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  product_name   String    @db.VarChar(255)
  quantity       Int
  purchase_price Int?
  sale_price     Int?
  import_date    DateTime? @db.Timestamp(6)
  export_date    DateTime? @db.Timestamp(6)
  created_at     DateTime  @default(now()) @db.Timestamp(6)
  updated_at     DateTime  @default(now()) @db.Timestamp(6)
  offer          offer[]
}

model offer {
  id                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  offer_date          DateTime  @db.Timestamp(6)
  expiry_date         DateTime? @db.Timestamp(6)
  discount_percentage Int?
  description         String?   @db.VarChar(255)
  inventory_id        String    @db.Uuid
  sales_manager_id    String    @db.Uuid
  created_at          DateTime  @default(now()) @db.Timestamp(6)
  updated_at          DateTime  @default(now()) @db.Timestamp(6)
  inventory           inventory @relation(fields: [inventory_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                user      @relation(fields: [sales_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model order {
  id                                String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  order_date                        DateTime  @db.Timestamp(6)
  delivery_date                     DateTime? @db.Timestamp(6)
  total_amount                      Int?
  order_status                      String?   @db.VarChar(255)
  customer_id                       String    @db.Uuid
  sales_manager_id                  String    @db.Uuid
  created_at                        DateTime  @default(now()) @db.Timestamp(6)
  updated_at                        DateTime  @default(now()) @db.Timestamp(6)
  user_order_customer_idTouser      user      @relation("order_customer_idTouser", fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_order_sales_manager_idTouser user      @relation("order_sales_manager_idTouser", fields: [sales_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                 String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                              String      @unique @db.VarChar(255)
  firstName                          String?     @db.VarChar(255)
  lastName                           String?     @db.VarChar(255)
  roq_user_id                        String      @db.VarChar(255)
  tenant_id                          String      @db.VarChar(255)
  created_at                         DateTime    @default(now()) @db.Timestamp(6)
  updated_at                         DateTime    @default(now()) @db.Timestamp(6)
  company                            company[]
  dashboard                          dashboard[]
  offer                              offer[]
  order_order_customer_idTouser      order[]     @relation("order_customer_idTouser")
  order_order_sales_manager_idTouser order[]     @relation("order_sales_manager_idTouser")
}
